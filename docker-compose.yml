services:
  # --- CLOUD LAYER: Core Data Streaming (Kafka) ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    depends_on: [zookeeper]
    ports: ["9092:9092"]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092

  # 2. Kafka Connect (Data Ingestion/Integration)
  connect:
    image: confluentinc/cp-kafka-connect:7.5.0
    hostname: connect
    depends_on: [kafka]
    ports: ["8083:8083"]
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_CONFIG_STORAGE_TOPIC: kafka-connect-config
      CONNECT_OFFSET_STORAGE_TOPIC: kafka-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: kafka-connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1

  # 3. ksqlDB Server (Stream SQL Processing)
  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.5.0
    hostname: ksqldb-server
    depends_on: [kafka]
    ports: ["8088:8088"]
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka:29092

  # 4. PySpark Worker (Advanced Batch/Stream Analytics)
  spark-worker:
    build:
      context: ./spark
    hostname: spark-worker
    depends_on: [kafka]
    # Starts the PySpark script, including the required Kafka client package
    command: /opt/spark/bin/spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.0 /app/spark_app.py
    environment:
      KAFKA_BROKERS: kafka:29092 # Passes Kafka address to the PySpark script

  # --- FOG LAYER: Visualization and Interaction (Streamlit) ---
  streamlit-app:
    build:
      context: ./streamlit
    hostname: streamlit-app
    # Mount the data folder so the app can access the CSV file
    volumes:
      - ./data:/app/data
    ports: ["8501:8501"]
    command: streamlit run streamlit_app.py --server.port 8501 --server.enableCORS false